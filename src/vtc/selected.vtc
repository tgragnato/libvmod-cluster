varnishtest "test .*_selected"

varnish v1 -vcl {
    import cluster;
    import directors;

    backend s1 { .host = "${bad_backend}";}
    backend s2 { .host = "${bad_backend}";}
    backend s3 { .host = "${bad_backend}";}

    sub vcl_init {
	new rr = directors.round_robin();
	rr.add_backend(s1);
	rr.add_backend(s2);

	new real = directors.round_robin();
	real.add_backend(s3);

	new cl = cluster.cluster(rr.backend(), deny=s2, real=real.backend());
    }
    sub vcl_backend_fetch {
	set bereq.http.c1 = cl.cluster_selected();
	set bereq.http.bc1 = bereq.backend;
	set bereq.http.c2 = cl.cluster_selected();
	set bereq.http.bc2 = bereq.backend;

	set bereq.http.r1 = cl.real_selected();
	set bereq.http.br1 = bereq.backend;
	set bereq.http.r2 = cl.real_selected();
	set bereq.http.br2 = bereq.backend;
    }
    sub vcl_backend_error {
	set beresp.status = 200;
	set beresp.http.c1 = bereq.http.c1;
	set beresp.http.bc1 = bereq.http.bc1;
	set beresp.http.c2 = bereq.http.c2;
	set beresp.http.bc2 = bereq.http.bc2;

	set beresp.http.r1 = bereq.http.r1;
	set beresp.http.br1 = bereq.http.br1;
	set beresp.http.r2 = bereq.http.r2;
	set beresp.http.br2 = bereq.http.br2;
	return (deliver);
    }
} -start

client c1 {
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.c1 == true
	expect resp.http.bc1 == s1
	expect resp.http.c2 == false
	expect resp.http.bc2 == real

	expect resp.http.r1 == false
	expect resp.http.br1 == s1
	expect resp.http.r2 == true
	expect resp.http.br2 == real
} -run
